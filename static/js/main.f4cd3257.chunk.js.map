{"version":3,"sources":["Components/Cover/Cover.js","Components/About/About.js","Components/Projects/Projects.js","Components/Work/Work.js","Components/Home/Home.js","Components/Nav/Nav.js","Components/Header/Header.js","Components/Blog/Blog.js","Components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Cover","className","href","target","rel","Component","About","Projects","projects","listOfProjects","map","project","links","live","src","process","image","alt","name","description","frontend","backend","Work","configureAnchors","offset","Home","id","Nav","to","Header","Blog","Footer","width","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f4cd3257.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Cover.css\";\n\nclass Cover extends Component {\n  render() {\n    return (\n      <div className=\"test\">\n        <div className=\"cover\">\n          <h1>Bonnie Peters</h1>\n          <div className=\"quote\">\n            <p>\n              “I have no special talents.\n              <br />I am only passionately curious.”\n            </p>\n            <h2>Albert Einstein</h2>\n          </div>\n        </div>\n        <div className=\"social-links\">\n          <a\n            href=\"https://github.com/bonniepeters\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            GitHub |\n          </a>\n          <a\n            href=\"https://www.linkedin.com/in/bonnieepeters/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            LinkedIn |\n          </a>\n          <a\n            href=\"https://twitter.com/BonnieEPeters\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Twitter |\n          </a>\n          <a\n            href=\"https://www.instagram.com/bonnie_peters_/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Instagram\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Cover;\n","import React, { Component } from \"react\";\n\nclass About extends Component {\n  render() {\n    return (\n      <div className=\"about\">\n        <h2>About</h2>\n        <p>Hello, I’m Bonnie. I’m a front end developer, traveler, and National Geographic subscriber. Thanks to my grandmother and her library of National Geographic issues when I was growing up, I developed a relentless curiosity to explore different cultures and subjects outside my surrounding world. Years later, I continue to subscribe to National Geographic and apply what I have learned in those pages about the diversity of humanity to the way I code. I always strive to build applications that speak to people who might see things differently than I do. Whatever it takes to make that product, whether its learning a new algorithm, framework, or language, I'm up for the challenge!</p>\n      </div>\n    );\n  }\n}\n\nexport default About;","import React, { Component } from \"react\";\nimport listOfProjects from '../../projects.json';\n\nclass Projects extends Component {\n  render() {\n    const projects = listOfProjects.map(project => {\n      return (\n        <>\n          <a rel=\"noopener noreferrer\" href={project.links.live} target=\"_blank\" >\n          <img\n          src={process.env.PUBLIC_URL + project.image}\n            alt=\"project\"\n            className=\"project-image\"\n            \n            />\n            </a>\n        <h3>{project.name}</h3>\n        <p>{project.description}</p>\n        <ul>\n          <li>\n            <a rel=\"noopener noreferrer\" href={project.links.frontend} target=\"_blank\" >\n              Front-End Github Repository\n            </a>\n          </li>\n          <li>\n            <a rel=\"noopener noreferrer\" href={project.links.backend} target=\"_blank\" >\n              Back-End Github Repository\n            </a>\n          </li>\n          <li>\n            <a rel=\"noopener noreferrer\" href={project.links.live} target=\"_blank\" >\n              Deployed Application\n            </a>\n          </li>\n        </ul>\n      </>\n      );\n    });\n    return (\n      <div className=\"project\">\n        {projects}\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from \"react\";\nimport Project1 from \"../Projects/Projects\";\n\nclass Work extends Component {\n  render() {\n    return (\n      <div className=\"work\">\n        <h2>Work</h2>\n        <Project1 />\n      </div>\n    );\n  }\n}\n\nexport default Work;","import React, { Component } from \"react\";\nimport ScrollableAnchor from \"react-scrollable-anchor\";\nimport Cover from \"../Cover/Cover\";\nimport About from \"../About/About\";\nimport Work from \"../Work/Work\";\nimport { configureAnchors } from \"react-scrollable-anchor\";\n\nconfigureAnchors({ offset: -63 });\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"home\">\n        <ScrollableAnchor id={\"home\"}>\n          <Cover />\n        </ScrollableAnchor>\n        <div className=\"content\">\n        <ScrollableAnchor id={\"about\"}>\n          <About />\n        </ScrollableAnchor>\n        <ScrollableAnchor id={\"work\"}>\n          <Work />\n          </ScrollableAnchor>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Nav.css\";\n\nclass Nav extends Component {\n  render() {\n    return (\n      <nav className=\"nav\">\n        <a className=\"nav-link\" href='/bonniepeters/#about'>About</a>\n        <a className=\"nav-link\" href='/bonniepeters/#work'>Work</a>\n        <a href='/bonniepeters/#home'>\n          <img\n          src={process.env.PUBLIC_URL + '/images/B_P Logo.png'}\n          alt=\"logo\"\n          className=\"logo\"\n        />\n        </a>\n        <a className=\"nav-link\" href=\"mailto:bonnie.e.peters@gmail.com\">Contact</a>\n        <Link className=\"nav-link\" to='/blog'>Blog</Link>\n        </nav>\n    );\n  }\n}\n\nexport default Nav;","import React, { Component } from \"react\";\nimport Nav from \"../Nav/Nav\";\n\n\nclass Header extends Component {\n  render() {\n    return (\n        <div className=\"header\">\n            <Nav />\n      </div>\n    );\n  }\n}\n\nexport default Header;","import React, { Component } from \"react\";\n\nclass Blog extends Component {\n  render() {\n    return (\n        <div className=\"blog\">\n            <h2>Coming Soon!</h2>\n      </div>\n    );\n  }\n}\n\nexport default Blog;","import React, { Component } from \"react\";\nimport \"./Footer.css\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div className=\"footer\">\n        <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/bonniepeters\">\n          <img\n            src={process.env.PUBLIC_URL + \"/images/GitHub.png\"}\n            alt=\"GitHub Logo\"\n            className=\"social-image\"\n          />\n        </a>\n        <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.linkedin.com/in/bonnieepeters/\">\n          <img\n            src={process.env.PUBLIC_URL + \"/images/LinkedIn.png\"}\n            alt=\"LinkedIn Logo\"\n            className=\"social-image\"\n            width=\"30px\"\n          />\n        </a>\n        <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://twitter.com/BonnieEPeters\">\n          <img\n            src={process.env.PUBLIC_URL + \"/images/Twitter.png\"}\n            alt=\"Twitter Logo\"\n            className=\"social-image\"\n          />\n        </a>\n        <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.instagram.com/bonnie_peters_/\">\n          <img\n            src={process.env.PUBLIC_URL + \"/images/Instagram.png\"}\n            alt=\"Instagram Logo\"\n            className=\"social-image\"\n          />\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Home from \"./Components/Home/Home\";\nimport Header from \"./Components/Header/Header\";\nimport Blog from \"./Components/Blog/Blog\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Sticky from \"react-sticky-el\";\nimport Footer from \"./Components/Footer/Footer\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Sticky>\n          <Header />\n        </Sticky>\n        <main>\n          <Switch>\n            <Route exact={true} path=\"/\" component={Home} />\n            <Route exact={true} path=\"/blog\" component={Blog} />\n          </Switch>\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(\n    <Router basename={process.env.PUBLIC_URL}>\n        <App />\n    </Router>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}